#!/bin/bash
set -euo pipefail

echo "üöÄ Starting minimal Xandhopp system..."

# Stop all containers first
echo "üõë Stopping existing containers..."
docker compose down || true

# Start only the essential services that work
echo "üóÑÔ∏è Starting PostgreSQL..."
docker compose up -d postgres

echo "‚è≥ Waiting for PostgreSQL..."
sleep 8

echo "üî¥ Starting Redis..."
docker compose up -d redis

echo "‚è≥ Waiting for Redis..."
sleep 3

echo "üìä Starting ClickHouse..."
docker compose up -d clickhouse

echo "‚è≥ Waiting for ClickHouse..."
sleep 5

echo "üîç Starting Meilisearch..."
docker compose up -d meilisearch

echo "‚è≥ Waiting for Meilisearch..."
sleep 3

# Check status
echo "üìä Service status:"
docker compose ps

echo ""
echo "‚úÖ Essential services started:"
echo "üóÑÔ∏è PostgreSQL: localhost:5433"
echo "üî¥ Redis: localhost:6380"
echo "üìä ClickHouse HTTP: http://localhost:8124"
echo "üîç Meilisearch: http://localhost:7701"

echo ""
echo "üß™ Testing services..."

# Test PostgreSQL
echo "üóÑÔ∏è Testing PostgreSQL..."
if docker compose exec postgres pg_isready -U xandhopp -d xandhopp > /dev/null 2>&1; then
    echo "‚úÖ PostgreSQL is ready"
else
    echo "‚ùå PostgreSQL not ready"
fi

# Test Redis
echo "üî¥ Testing Redis..."
if docker compose exec redis redis-cli ping > /dev/null 2>&1; then
    echo "‚úÖ Redis is ready"
else
    echo "‚ùå Redis not ready"
fi

# Test ClickHouse
echo "üìä Testing ClickHouse..."
if curl -s http://localhost:8124/ping > /dev/null 2>&1; then
    echo "‚úÖ ClickHouse is ready"
else
    echo "‚ùå ClickHouse not ready"
fi

# Test Meilisearch
echo "üîç Testing Meilisearch..."
if curl -s http://localhost:7701/health > /dev/null 2>&1; then
    echo "‚úÖ Meilisearch is ready"
else
    echo "‚ùå Meilisearch not ready"
fi

echo ""
echo "üìù Next steps:"
echo "1. Setup database: cd apps/symfony-api && export DATABASE_URL='postgresql://xandhopp:xandhopp@localhost:5433/xandhopp' && php bin/console doctrine:database:create --if-not-exists && php bin/console doctrine:migrations:migrate -n && php bin/console app:seed:freemium"
echo "2. Setup search index: ./scripts/setup-meilisearch.sh"
echo "3. Start web app: cd apps/web && pnpm dev"
echo "4. Start API manually: cd apps/symfony-api && php -S localhost:8081 -t public"
